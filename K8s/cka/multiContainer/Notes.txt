- ------------------------------------------------- Multi-Container ----------------------------------------------------------------------

a multi-container Pod is a group of one or more containers that are deployed and managed together on a single node.

are used when two or more tightly-coupled processes need to share resources or work together to achieve a common goal.

Each container in a multi-container Pod runs in its own isolated environment, but they share the same network namespace, 
which allows them to communicate with each other using localhost. 
They can also share storage volumes, environment variables, and other resources.

-------------------------------------------------------------------------------------------------------------------------------------

- Init Container:

In Kubernetes, an init container is a special type of container that runs before the main container of a pod starts up.
The purpose of an init container
 is to perform some initialization task that is required by the main container before it can start running properly.






# Some common use cases for multi-container Pods include:


Sidecar pattern: 
In this pattern, a helper container (the "sidecar") is added to a primary container to provide additional functionality or support.
- For example, 
a logging sidecar can be added to a container to collect and forward logs to a central location.

Adapter pattern: 
In this pattern, a container is added to the Pod to adapt the output or input of the primary container to an external system. 
- For example, 
a container can be added to convert the output of a primary container to a format required by an external monitoring system.

Ambassador pattern: 
In this pattern, a container is added to the Pod to act as an intermediary between the primary container and an external system. 
- For example, 
a container can be added to act as a load balancer for a web server container.

Overall, multi-container Pods in Kubernetes provide a flexible and efficient way to deploy and manage multiple containers that work together to achieve a common goal.


# ====================================================== How To Use ==============================================================================================================
thia a simple pod.yml file to create multi-container in one pod 
# apiVersion: v1
# kind: Pod
# metadata:
#   name: example-pod
# spec:
#   containers:
#   - name: primary-container
#     image: nginx:latest
#     ports:
#     - containerPort: 80
#   - name: sidecar-container
#     image: busybox:latest
#     command: ['sh', '-c', 'while true; do echo hello world; sleep 10; done']



$ kubectl get pods example-pod -o jsonpath='{.spec.containers[*].name}' # this command  To view the containers in a Pod,

$ k logs  my-app-695ff8c478-7xtzb -c my-container



