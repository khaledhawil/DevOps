# ================================== ReplicaSet =============================================

- What is a ReplicaSet !! 
helps ensure that a specified number of replicas of a pod are running at any given time.
responsible for maintaining the desired state of a pod, 
and they work by creating and managing a set of identical replicas of a pod.
- is recommended to use Deployments instead of directly using ReplicaSets, 
as they help manage ReplicaSets and provide declarative updates to Pods.

$ kubectl get rs

# =============================== How To Use It ==================================================================
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: my-replicaset
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - name: my-container
        image: my-image

$ kubectl apply -f my-replicaset.yaml



- You can also use the kubectl scale command to scale the number of replicas up or down:
$ kubectl scale --replicas=3 replicaset/my-replicaset
# This command will scale the ReplicaSet to have three replicas instead of two.


- You Can use another command to edit im repica:
$ K edit rs rs-name







 $ kubectl get pods -l tier=frontend # to show the pods that have labels  tier=frontend
 $ kubectl get pod --selector=tier=frontend














