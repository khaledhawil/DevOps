
*                                       Docker Swarm 



- Docker Swarm provides a number of benefits, including:

- Scalability:
Docker Swarm makes it easy to scale your applications up or down by adding or removing worker nodes as needed.

- High availability:
Docker Swarm ensures that your applications are always available by automatically rescheduling tasks to healthy nodes in the event of a node failure.

- Load balancing: 
Docker Swarm provides built-in load balancing for your applications, distributing traffic evenly across all the nodes in the swarm.

- Security: 
Docker Swarm provides built-in security features, such as encryption, authentication, and role-based access control, to ensure that your applications are secure.

* Overall, Docker Swarm is a powerful tool that makes it easy to deploy and manage containerized applications at scale.

$ docker swarm init
Swarm initialized: current node (xxxx) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token <token> <ip>:<port>

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instruction



Join one or more worker nodes to the swarm using the docker swarm join command and the join token generated in the previous step.
$ docker swarm join --token <token> <ip>:<port>



You can scale the service by increasing or decreasing the number of replicas using the docker service scale command

$ docker service scale my-service=5






You can monitor the status of the swarm and its services using the docker node, docker service, and docker stack commands.
$ docker node ls
$ docker service ls
$ docker stack ls


